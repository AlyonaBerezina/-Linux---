Задание 1
Что происходит с оперативной памятью во время перехода ПК в:

сон (suspend)
гибернацию (hibernate)
Приведите ответ для каждого случая в свободной форме.

Ответ:
Во время перехода ПК в режим сна:  система отключает питание от компонентов компьютера, которые потребляют дополнительную электроэнергию (таких как жесткий диск, видеокарта и т.д.). Но не отключает питание от оперативной памяти, так как она является энергозависимой и если отключить от неё питание, то вся информация хранящаяся в ней будет утеряна. Когда мы выводим компьютер из спящего режима, то, так как как оперативная память не была очищена, мы возвращаемся к прежнему состоянию системы (с теми же запущенными программами, службами и т.д.). То есть все запущенные приложения остаются в оперативной памяти компьютера, продолжают свою работу, но находятся в состоянии ожидания. 
В режиме гибернации: все запущенные приложения из оперативной памяти сохраняются в отдельный файл на жесткий диск компьютера, а сам компьютер выключается. Когда его включают, информация из данного файла переписывается в оперативную память и пользователь так же видит состояние системы на момент перехода в режим гибернации. Возобновление работы происходит медленнее, чем выход из спящего режима, но быстрее, чем обычная загрузка Windows.

Задание 2
В лекции не была упомянута одна известная команда для получения информации о нагрузке на компьютер и в частности на ОЗУ.
*Как называется эта команда? Что такое si и so в примере на картинке? *

Приведите ответ в свободной форме.

Ответ:
Команда vmstat в Linux выводит статистику использования виртуальной памяти. 
vmstat [options] [delay [count]]
http://screenshot.alarislabs.com/AB22/%20image_20240211191007_b452a655.png

Procs
r: количество запущенных процессов (работающих или ожидающих выполнения).
b: количество спящих процессов.
Memory
swpd: объем используемой виртуальной памяти.
free: объем свободной памяти.
buff: количество памяти, используемой в качестве буферов.
cache: объем памяти, используемой в качестве кеша.
inact: количество неактивной памяти (опция -a).
active: количество активной памяти. (опция -a)
Swap
si: объем памяти, выгруженный с диска (/s).
so: объем памяти, перенесенный на диск (/s).
IO
bi: блоки, полученные от блочного устройства (blocks/s).
bo: блоки, отправленные на блочное устройство (blocks/s).
System
in: количество прерываний в секунду, включая часы.
cs: количество переключений контекста в секунду.
CPU
Здесь проценты от общего времени процессора.
us: время, потраченное на запуск кода, не относящегося к ядру (время пользователя).
sy: время, потраченное на выполнение кода ядра (системное время).
id: время бездействия. До версии Linux 2.5.41 это включает время ожидания ввода-вывода.
wa: время, проведенное в ожидании ввода/вывода. До Linux 2.5.41, включено в idle.
st: время, украденное из виртуальной машины. До Linux 2.6.11 неизвестно.

Задание 3
Приведите 3 команды, которые выведут на экран следующее::

Архитектуру ПК
Модель процессора
Количество памяти, которая уже не используется процессами, но еще остается в памяти(ключевое слово - inactive).
Примечание: при выполнении задания предполагается использование конструкции "{команда} | grep {параметр для фильрации вывода}"

Ответ:
lscpu — отображает информацию о процессоре, архитектуре, количестве ядер, модели процессора, поставщике процессора, тактовой частоте и т. Д.

Архитектура ПК/Модель процессора
http://screenshot.alarislabs.com/AB22/%20image_20240211191054_471d0199.png

Второй вариант посмотреть архитектуру:
[root@maincl-de.support /]# uname -m
x86_64

Второй вариант посмотреть модель процессора:
[root@maincl-de.support /]# cat /proc/cpuinfo | grep 'model name' | uniq
model name      : Intel(R) Xeon(R) Gold 6140 CPU @ 2.30GHz

cat /proc/meminfo - отображает информацию об использовании памяти в системе.

Количество неактивной памяти
http://screenshot.alarislabs.com/AB22/%20image_20240211191122_5f7e04f1.png

Задание 4
Создайте скрин вывода команды free -h -t
http://screenshot.alarislabs.com/AB22/%20image_20240211191141_f8bedbf8.png
Создайте swap-файл размером 1Гб
fallocate -l 1G /swapAB
Добавьте настройку чтобы swap-файл подключался автоматически при перезагрузке виртуальной машины (подсказка: необходимо внести изменения в файл /etc/fstab)
http://screenshot.alarislabs.com/AB22/%20image_20240211191208_67ce558e.png
Создайте скрин вывода команды free -h -t
http://screenshot.alarislabs.com/AB22/%20image_20240211191232_7d98417d.png
Создайте скрин вывода команды swapon -s
http://screenshot.alarislabs.com/AB22/%20image_20240211191331_f450cb1c.png
Измените процент свободной оперативной памяти, при котором начинает использоваться раздел подкачки до 30%. Сделайте скрин внесенного изменения.
Насколько я понимаю для такой настройки используются параметр vm.swappiness (/etc/sysctl.conf), по описанию для этих целей вроде больше всего подходит, но почитав несколько источников, начала сомневаться, что это оно. Т.к. Многие определяют этот параметр как просто процент вероятности попадания информации в файл подкачки.
В любом случае на системе он уже равен 30:
http://screenshot.alarislabs.com/AB22/%20image_20240211191353_f64e93c3.png
При значении в 30 система начнет вытеснять страницы приложений в подкачку после того, как останется свободной менее 30% памяти, при 100 - подкачка будет работать всегда. Если выставить значение в ноль, то это не отключит подкачку, но она не будет использоваться до последнего, в критической ситуации система все-таки начнет сбрасывать страницы на диск, чтобы сохранить приемлемый уровень производительности.

Задание 5
Распишите, чем отличается физическая память от виртуальной. Какими программами можно её посмотреть? Как можно понять сколько виртуальной памяти потребляется процессом, а сколько физической?

Ответ:
Физическая память — это аппаратная составляющая компьютера, которая предназначена для хранения данных. В ней размещаются код и данные всех запущенных на выполнение процессов. Виртуальная память - это абстракция физической памяти, которая позволяет компьютеру работать с большим объемом данных, чем физическая память может вместить. Для того, чтобы отобразить потребление виртуальной памяти, используются такие команды как top, atop, vmstat, можно посмотреть через cat /etc/proc/meminfo или с помощью утилиты free. Сколько какой памяти занимает процесс можно посмотреть с помощью команды ps, которая может показать использование памяти для каждого процесса в реальном времени. Показывается процент используемой памяти (MEM), общее количество виртуальной памяти (VSZ) общий объем физической памяти (RSS) Также можно отсортировать список процессов с помощью опции --sort. 
http://screenshot.alarislabs.com/AB22/%20image_20240211191431_da534b63.png


